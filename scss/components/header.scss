@use '../variable.scss' as variable;
@use '../breakpoint' as breakpoint;
@use '../mixin' as mixin;

.header-wrap {
    height: 70px;
    position: relative;

    header {
        padding: 11px 0px;
        position: fixed;
        width: 100%;
        background-color: variable.$white-color;
        box-shadow: variable.$box-shadow;
        z-index: 12;

        .container {
            .header-content {
                display: flex;
                justify-content: space-between;
                align-items: center;

                .header-left {
                    .logo {
                        width: 145px;
                        height: 48px;
                        position: relative;
                    }
                }

                .menu-button {
                    display: none;
                    button{
                        position: relative;
                        width: 30px;
                        height: 30px;
                        border: unset;
                        background: unset;
                    }
                    @include mixin.respond(max, breakpoint.$breakpoint-md) {
                        display: block;
                    }
                }

                .header-right {
                    @include mixin.respond(max, breakpoint.$breakpoint-md) {
                        display: none;
                        box-shadow: rgba(0,0,0,.15) 0px 3px 10px;
                        &.show {
                            animation: slideIn 0.6s ease-in-out forwards;
                            display: block;
                            position: absolute;
                            top: 0;
                            right: 0;
                            width: 100%;
                            max-width: 260px;
                            padding: 20px;
                            background-color: variable.$white-color;
                            height: 100dvh;
                            overflow-y: scroll;
                            .close-button {
                                display: flex;
                                justify-content: flex-end;
                                padding-bottom: 20px;
                            }
                            .header-links{
                            nav{
                                ul{
                                    flex-direction: column;
                                    gap: 25px;
                                }
                            }
                            }
                        }
                    }
                    button {
                        height: 30px;
                        width: 30px;
                        background-color: unset;
                        border: none;
                        position: relative;
                    }

                    .header-links {
                        .close-button {
                            button {
                                height: 30px;
                                width: 30px;
                                background-color: unset;
                                border: none;
                                position: relative;
                                display: none;

                                @include mixin.respond(max, breakpoint.$breakpoint-md) {
                                    display: block;
                                }
                            }
                        }

                        nav {
                            ul {
                                display: flex;
                                gap: 48px;

                                li {
                                    a {
                                        font-size: 16px;
                                        line-height: 1.25;
                                        color: variable.$light-black-color;
                                        transition: variable.$transition;
                                        font-weight: 500;
                                        position: relative;
                                        &:hover{
                                          color: variable.$primary-color;
                                        }
                                        &.active {
                                            &::after{
                                                content: '';
                                                position: absolute;
                                                width: 100%;
                                                height: 5px;
                                                bottom: 10px;
                                                left: 0;
                                                bottom: -7px;
                                                background: variable.$primary-color;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
  @keyframes slideIn {
    from {
      right: -100%;
      opacity: 0;
    }

    to {
      right: 0;
      opacity: 1;
    }
  }